generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Match {
  id            Int          @id @default(autoincrement())
  startDateTime DateTime     @db.Timestamptz(6)
  roundNumber   Int
  venue         String?
  margin        Int?
  winnerId      Int?
  winner        Team?        @relation(fields: [winnerId], references: [id])
  predictions   Prediction[]
  teamMatches   TeamMatch[]
  season        Season?      @relation(fields: [seasonId], references: [id])
  seasonId      Int?

  @@unique([startDateTime, venue])
  @@index([winnerId])
}

model MlModel {
  id                 Int             @id @default(autoincrement())
  name               String          @unique
  description        String?
  isPrincipal        Boolean
  predictionType     String
  usedInCompetitions Boolean
  predictions        Prediction[]
  mlModelSeasons     MlModelSeason[]

  @@index([name])
}

model MlModelSeason {
  id                   Int     @id @default(autoincrement())
  isPrincipal          Boolean @default(false)
  isUsedInCompetitions Boolean @default(false)
  seasonId             Int
  season               Season  @relation(fields: [seasonId], references: [id])
  mlModelId            Int
  mlModel              MlModel @relation(fields: [mlModelId], references: [id])

  @@unique([seasonId, isPrincipal])
  @@index([seasonId])
  @@index([mlModelId])
}

model Prediction {
  id                      Int      @id @default(autoincrement())
  predictedMargin         Float?
  matchId                 Int
  mlModelId               Int
  predictedWinnerId       Int
  isCorrect               Boolean?
  predictedWinProbability Float?
  createdAt               DateTime @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime @default(now()) @db.Timestamptz(6)
  match                   Match    @relation(fields: [matchId], references: [id], onDelete: Cascade)
  mlModel                 MlModel  @relation(fields: [mlModelId], references: [id])
  predictedWinner         Team     @relation(fields: [predictedWinnerId], references: [id])

  @@index([matchId])
  @@index([mlModelId])
  @@index([predictedWinnerId])
}

model Team {
  id          Int          @id @default(autoincrement())
  name        String       @unique()
  teamMatches TeamMatch[]
  Match       Match[]
  Prediction  Prediction[]

  @@index([name])
}

model TeamMatch {
  id      Int     @id @default(autoincrement())
  atHome  Boolean
  score   Int
  matchId Int
  teamId  Int
  match   Match   @relation(fields: [matchId], references: [id], onDelete: Cascade)
  team    Team    @relation(fields: [teamId], references: [id])

  @@index([matchId])
  @@index([teamId])
}

model Season {
  id             Int             @id @default(autoincrement())
  year           Int             @unique
  matches        Match[]
  mlModelSeasons MlModelSeason[]

  @@index([year])
}
